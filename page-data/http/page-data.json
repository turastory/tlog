{"componentChunkName":"component---src-templates-blog-post-tsx","path":"/http/","result":{"data":{"site":{"siteMetadata":{"title":"Alan'space"}},"markdownRemark":{"id":"87b23438-6c09-57f9-b5c2-d9ac4feafad6","fields":{"slug":"/http/"},"excerpt":"평소에 자주 사용하지만 정확하게 알지 못했던 개념들에 대해 정리해보는 시간을 가져보자. 용어 정리 Connection - 프로그램간의 통신을 목적으로 사용되는 전송 계층의 가상 회로. 물리적으로 연결되어있지는 않지만, 마치 실제로 연결된 것처럼 통신을 할 수 있다. Message…","html":"<p>평소에 자주 사용하지만 정확하게 알지 못했던 개념들에 대해 정리해보는 시간을 가져보자.</p>\n<h3>용어 정리</h3>\n<ul>\n<li><strong>Connection</strong> - 프로그램간의 통신을 목적으로 사용되는 전송 계층의 가상 회로. 물리적으로 연결되어있지는 않지만, 마치 실제로 연결된 것처럼 통신을 할 수 있다.</li>\n<li><strong>Message</strong> - HTTP 통신의 기본 단위. 8개의 비트가 모인 Octet의 배열로 이루어져 있음.</li>\n<li><strong>Resource</strong> - 네트워크 상에서 URI로 식별할 수 있는 데이터나 서비스</li>\n<li><strong>Entity</strong> - Request나 Response에 실려 보내지는 Payload. 헤더와 바디로 구성됨.</li>\n<li><strong>Representation</strong> - Response에 포함된 Entity. Content Negitiation의 대상이기도 함.</li>\n<li><strong>Content Negotiation</strong> - 적절한 Representation을 선택하는 매커니즘.</li>\n</ul>\n<h3>HTTP</h3>\n<ul>\n<li>어플리케이션 계층의 프로토콜</li>\n<li>TCP나 TLS를 통해 전송</li>\n</ul>\n<blockquote>\n<p>프로토콜은 일반적으로 통신 프로토콜을 의미하고, 컴퓨터나 통신 장비 (라우터같은 것들) 사이에서 <strong>메시지</strong>를 주고 받는 규칙의 체계다.</p>\n</blockquote>\n<h3>통신을 위한 다른 프로토콜도 있을까?</h3>\n<p>Telnet, FTP, SMTP, DNS 등등 어플리케이션 계층에도 여러 가지가 있음.</p>\n<h3>버전별 차이점</h3>\n<ul>\n<li>\n<p>HTTP/0.9</p>\n<ul>\n<li>raw data transfer를 위한 간단한 프로토콜</li>\n<li>HTTP 메서드나 헤더, status code같은 건 하나도 없었음.</li>\n</ul>\n</li>\n<li>\n<p>HTTP/1.0</p>\n<ul>\n<li>각 요청에 버전 정보가 포함되고, 응답에 상태 코드가 포함되었음.</li>\n<li>헤더를 통해 메타데이터를 담아서 보낼 수 있게 되었음.</li>\n<li>MIME-like message format</li>\n<li>Modifiers on req/res semantics</li>\n<li>proxy, cache server, persistent connection, virtual host 등 고려 못함</li>\n</ul>\n</li>\n<li>\n<p>HTTP/1.1</p>\n<ul>\n<li>HTTP 메서드 OPTIONS, PUT, DELETE, TRACE 추가</li>\n<li>Accept 헤더: 클라이언트에서 처리 가능한 Media Type 명시</li>\n</ul>\n</li>\n</ul>\n<h3>HTTP 구현? - 우리도 HTTP를 만들어볼 수 있을까?</h3>\n<h2>Content Negotiation</h2>\n<blockquote>\n<p>The process of selecting the best representation for a given response when there are multiple representations available.</p>\n</blockquote>\n<p>다양한 Representation 중에 가장 적절한 것을 고르는 과정</p>\n<h3>References</h3>\n<ul>\n<li><a href=\"https://developer.mozilla.org/ko/docs/Web/HTTP/Basics_of_HTTP/Evolution_of_HTTP\">https://developer.mozilla.org/ko/docs/Web/HTTP/Basics_of_HTTP/Evolution_of_HTTP</a></li>\n</ul>","frontmatter":{"date":"2022-04-10","title":"HTTP","description":null,"category":"post","tags":["concept","web"]}},"previous":{"fields":{"slug":"/study-plan-2022/"},"frontmatter":{"title":"2022년 공부 계획"}},"next":{"fields":{"slug":"/snippets/typeorm-default-value/"},"frontmatter":{"title":"TypeORM에서 default value 사용 시 주의점"}}},"pageContext":{"id":"87b23438-6c09-57f9-b5c2-d9ac4feafad6","previousPostId":"2a54785a-d522-56ed-86bf-7d277337eef3","nextPostId":"22531309-b312-52a8-9cce-ff771d00adb6"}},"staticQueryHashes":["2841359383"],"slicesMap":{}}