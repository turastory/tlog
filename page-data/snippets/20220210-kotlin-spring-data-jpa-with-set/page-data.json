{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/snippets/20220210-kotlin-spring-data-jpa-with-set/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Turastory"}},"markdownRemark":{"id":"58f4688b-04cb-5847-ae22-8be91878c45b","excerpt":"Kotlin 환경에서 Spring Data JPA 사용할 때 Entity에 , 를 사용하면 내부 구현이 EmptySet으로 되어 있어서 () merge…","html":"<p>Kotlin 환경에서 Spring Data JPA 사용할 때 Entity에 <code class=\"language-text\">setOf()</code>, <code class=\"language-text\">Collections.toSet()</code>를 사용하면 내부 구현이 EmptySet으로 되어 있어서 (<code class=\"language-text\">Set&lt;Nothing></code>) merge할 때 <code class=\"language-text\">ClassCastException</code>이 발생한다.</p>\n<p>대신 <code class=\"language-text\">HashSet</code>을 사용하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token comment\">// 선언</span>\n<span class=\"token annotation builtin\">@Entity</span>\n<span class=\"token keyword\">class</span> <span class=\"token function\">Model</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">var</span> options<span class=\"token operator\">:</span> Set<span class=\"token operator\">&lt;</span>OtherModel<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token function\">setOf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token function\">hashSetOf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\">// 리스트 변환</span>\nmodel<span class=\"token punctuation\">.</span>options <span class=\"token operator\">=</span> options<span class=\"token punctuation\">.</span><span class=\"token function\">toHashSet</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>동일한 문제가 <code class=\"language-text\">listOf()</code>에 대해서도 발생하는 것을 확인했다. 리스트를 사용할 경우에는 <code class=\"language-text\">listOf()</code> 대신 <code class=\"language-text\">arrayListOf()</code>를 사용하면 된다.</p>\n<div class=\"gatsby-highlight\" data-language=\"kotlin\"><pre class=\"language-kotlin\"><code class=\"language-kotlin\"><span class=\"token comment\">// 선언</span>\n<span class=\"token annotation builtin\">@Entity</span>\n<span class=\"token keyword\">class</span> <span class=\"token function\">Model</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">var</span> options<span class=\"token operator\">:</span> List<span class=\"token operator\">&lt;</span>OtherModel<span class=\"token operator\">></span> <span class=\"token operator\">=</span> <span class=\"token function\">listOf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-></span> <span class=\"token function\">arrayListOf</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>","frontmatter":{"title":"Kotlin 환경에서 Spring Data JPA를 사용할 때 Entity에서 Set 사용 시 ClassCastException 문제","date":"February 10, 2022","description":null,"tags":["kotlin","socket","spring"]}},"previous":{"fields":{"slug":"/20211218-eternal-return-site/post/"},"frontmatter":{"title":"이터널 리턴 전적 검색 사이트를 만들어보았다"}},"next":{"fields":{"slug":"/snippets/20220210-android-studio-keystore/post/"},"frontmatter":{"title":"Android Studio에서 keystore 생성 시 주의점"}}},"pageContext":{"id":"58f4688b-04cb-5847-ae22-8be91878c45b","previousPostId":"8398fe3a-011f-56ca-8803-fb21f16c5eea","nextPostId":"ad85be87-c022-5597-8e94-838d85fb6016"}},
    "staticQueryHashes": ["2841359383"]}