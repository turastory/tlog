{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/snippets/20220227-pandas-cheatsheet/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Turastory"}},"markdownRemark":{"id":"81efbda9-e98b-572b-ba7f-9724282c04e7","excerpt":"By use case ###Filter rows ###Convert multi-index series to dataframe https://stackoverflow.com/questions/44142591/converting-a-pandas-multi-index-series-to-a…","html":"<h2>By use case</h2>\n<p>###Filter rows</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">1</span><span class=\"token punctuation\">.</span> df<span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">[</span>column_name<span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> some_value<span class=\"token punctuation\">]</span>\n<span class=\"token number\">2</span><span class=\"token punctuation\">.</span> df<span class=\"token punctuation\">[</span>df<span class=\"token punctuation\">[</span>column_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isin<span class=\"token punctuation\">(</span>some_values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token number\">3</span><span class=\"token punctuation\">.</span> df<span class=\"token punctuation\">[</span><span class=\"token operator\">~</span>df<span class=\"token punctuation\">[</span>column_name<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>isin<span class=\"token punctuation\">(</span>some_values<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token number\">4</span><span class=\"token punctuation\">.</span> df<span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>cond1<span class=\"token punctuation\">)</span> <span class=\"token operator\">&amp;</span> <span class=\"token punctuation\">(</span>cond2<span class=\"token punctuation\">)</span> <span class=\"token operator\">|</span> <span class=\"token punctuation\">(</span>cond3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n<span class=\"token number\">5</span><span class=\"token punctuation\">.</span> s<span class=\"token punctuation\">[</span>s <span class=\"token operator\">==</span> some_value<span class=\"token punctuation\">]</span></code></pre></div>\n<p>###Convert multi-index series to dataframe</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">Series<span class=\"token punctuation\">.</span>unstack</code></pre></div>\n<p><a href=\"https://stackoverflow.com/questions/44142591/converting-a-pandas-multi-index-series-to-a-dataframe-by-using-second-index-as-c\">https://stackoverflow.com/questions/44142591/converting-a-pandas-multi-index-series-to-a-dataframe-by-using-second-index-as-c</a></p>\n<p>###Convert index of dataframe to a column</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token number\">1</span><span class=\"token punctuation\">.</span> df<span class=\"token punctuation\">[</span>column_name<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>index\n<span class=\"token number\">2</span><span class=\"token punctuation\">.</span> df<span class=\"token punctuation\">.</span>insert<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> column_name<span class=\"token punctuation\">,</span> df<span class=\"token punctuation\">.</span>index<span class=\"token punctuation\">)</span>\n<span class=\"token number\">3</span><span class=\"token punctuation\">.</span> df<span class=\"token punctuation\">.</span>reset_index<span class=\"token punctuation\">(</span>level<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> inplace<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p>###Rename columns</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">result<span class=\"token punctuation\">.</span>rename<span class=\"token punctuation\">(</span>columns<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span> category<span class=\"token punctuation\">:</span> <span class=\"token string\">'item_code'</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span></code></pre></div>\n<p><a href=\"https://stackoverflow.com/questions/20461165/how-to-convert-index-of-a-pandas-dataframe-into-a-column\">https://stackoverflow.com/questions/20461165/how-to-convert-index-of-a-pandas-dataframe-into-a-column</a></p>\n<p>###Split a single row into multiple rows</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\">DataFrame<span class=\"token punctuation\">.</span>explode\nSeries<span class=\"token punctuation\">.</span>explode</code></pre></div>\n<p><a href=\"https://stackoverflow.com/questions/50731229/split-cell-into-multiple-rows-in-pandas-dataframe\">https://stackoverflow.com/questions/50731229/split-cell-into-multiple-rows-in-pandas-dataframe</a></p>\n<p>###Group by - sort within groups</p>\n<div class=\"gatsby-highlight\" data-language=\"python\"><pre class=\"language-python\"><code class=\"language-python\"><span class=\"token comment\"># We need to sort within depth2, so group by depth2 and aggergate.</span>\nagg <span class=\"token operator\">=</span> df<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token string\">'depth1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'depth2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">'depth2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>agg<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token string\">'total_size'</span><span class=\"token punctuation\">,</span> 'size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># sort within the groups, take the most N rows.</span>\n<span class=\"token comment\"># Note: pass group_keys=False to avoid receiving indices in subsequent apply() function.</span>\ncount <span class=\"token operator\">=</span> <span class=\"token number\">3</span>\nresult <span class=\"token operator\">=</span> agg<span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span><span class=\"token string\">'depth1'</span><span class=\"token punctuation\">,</span> group_keys<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">apply</span><span class=\"token punctuation\">(</span>\n  <span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> x<span class=\"token punctuation\">.</span>sort_values<span class=\"token punctuation\">(</span>by<span class=\"token operator\">=</span><span class=\"token string\">'total_size'</span><span class=\"token punctuation\">,</span> ascending<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>iloc<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>count<span class=\"token punctuation\">]</span>\n<span class=\"token punctuation\">)</span>\n\n<span class=\"token comment\"># Optional - join the most N rows to a single row</span>\nresult<span class=\"token punctuation\">.</span>reset_index<span class=\"token punctuation\">(</span>level<span class=\"token operator\">=</span><span class=\"token string\">'depth2'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>groupby<span class=\"token punctuation\">(</span>category<span class=\"token punctuation\">,</span> group_keys<span class=\"token operator\">=</span><span class=\"token boolean\">False</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">apply</span><span class=\"token punctuation\">(</span>\n    <span class=\"token keyword\">lambda</span> x<span class=\"token punctuation\">:</span> <span class=\"token string\">','</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">[</span><span class=\"token string\">'depth2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">)</span></code></pre></div>\n<p><a href=\"https://stackoverflow.com/questions/27842613/pandas-groupby-sort-within-groups\">https://stackoverflow.com/questions/27842613/pandas-groupby-sort-within-groups</a></p>\n<hr>\n<h2>Mapping Functions</h2>\n<blockquote>\n<p>map vs apply vs applymap vs transform</p>\n</blockquote>\n<p>헷갈리는 Pandas의 매핑 함수들에 대해 정리해보았다.</p>\n<p>###<a href=\"https://pandas.pydata.org/docs/reference/api/pandas.core.groupby.GroupBy.apply.html\">GroupBy.apply</a></p>\n<blockquote>\n<p>Apply function func group-wise and combine the results together.</p>\n</blockquote>\n<ul>\n<li>group에 속한 Row를 가지고 있는 <code class=\"language-text\">DataFrame</code>을 함수 인자로 받는다. 다음과 같이 apply에 넘기는 lambda 함수에서 print를 해보면 알 수 있다.</li>\n<li>함수에서는 DataFrame, Series, Scalar 등 다양한 값을 리턴할 수 있다.</li>\n</ul>\n<p>###<a href=\"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.apply.html\">DataFrame.apply</a></p>\n<blockquote>\n<p>Apply a function along input axis of DataFrame.</p>\n</blockquote>\n<ul>\n<li>\n<p>DataFrame의 row나 column을 함수 인자로 받는다.</p>\n<ul>\n<li>axis: 0 or index - 각각의 column에 적용</li>\n<li>axis: 1 or columns - 각각의 row에 적용</li>\n</ul>\n</li>\n<li>\n<p>함수에서는 Series나 Scalar를 리턴해야 한다.</p>\n</li>\n<li>\n<p><code class=\"language-text\">result_type</code>을 통해 함수에서 리턴하는 값들이 어떻게 묶이는지 결정할 수 있다.</p>\n</li>\n</ul>\n<p>###<a href=\"https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.applymap.html\">DataFrame.applymap</a></p>\n<blockquote>\n<p>Apply a function to a Dataframe elementwise</p>\n</blockquote>\n<ul>\n<li>DataFrame의 모든 값을 각각 함수 인자로 받는다.</li>\n<li>함수에서는 Scalar를 리턴해야 한다.</li>\n</ul>\n<h3>Element-wise?</h3>\n<ul>\n<li><code class=\"language-text\">DataFrame.apply</code> - 전체 row나 column에 적용됨.</li>\n<li><code class=\"language-text\">DataFrame.applymap</code>, <code class=\"language-text\">Series.apply</code>, <code class=\"language-text\">Series.map</code> - 각각의 요소에 적용됨.</li>\n</ul>\n<p>###<code class=\"language-text\">Series.apply</code>와 <code class=\"language-text\">Series.map</code>의 차이점</p>\n<p>둘 모두 개별 요소에 함수가 적용되지만(element-wise), 리턴할 수 있는 형태가 다르다.</p>\n<ul>\n<li><code class=\"language-text\">Series.apply</code>에 전달되는 함수는 개별 요소나 <code class=\"language-text\">Series</code>를 리턴할 수 있음</li>\n<li><code class=\"language-text\">Series.map</code>은 개별 요소만 리턴할 수 있음</li>\n</ul>\n<p>-> <code class=\"language-text\">Series.map</code>은 변환 전/후의 차원이 유지되는 반면 <code class=\"language-text\">Series.apply</code>는 변환 후의 차원이 변할 수 있음. (Series -> DataFrame이 될 수 있다)</p>","frontmatter":{"title":"Pandas Cheatsheet","date":"February 27, 2022","description":null,"tags":["python","pandas","data-analysis"]}},"previous":{"fields":{"slug":"/20220227-source-set-in-kotlin-gradle-dsl/"},"frontmatter":{"title":"Gradle 프로젝트에 새로운 Source Set 추가하기 (with Kotlin Gradle DSL)"}},"next":null},"pageContext":{"id":"81efbda9-e98b-572b-ba7f-9724282c04e7","previousPostId":"41b02e3e-e7ad-5f5e-816e-bdd943abb75e","nextPostId":null}},
    "staticQueryHashes": ["2841359383"]}