{
    "componentChunkName": "component---src-templates-blog-post-js",
    "path": "/snippets/20220222-pandas-map-apply-applymap/",
    "result": {"data":{"site":{"siteMetadata":{"title":"Turastory"}},"markdownRemark":{"id":"4162a083-fda3-5574-a196-686f84d4b24c","excerpt":"세 가지의 차이에 대해 정리해보았다. Element-wise?  - 전체 row나 column에 적용됨. , ,  - 전체 row나 column에 적용됨. 와 의 차이점 둘 모두 개별 요소에 함수가 적용되지만(element-wise…","html":"<p>세 가지의 차이에 대해 정리해보았다.</p>\n<h3>Element-wise?</h3>\n<ul>\n<li><code class=\"language-text\">DataFrame.apply</code> - 전체 row나 column에 적용됨.</li>\n<li><code class=\"language-text\">DataFrame.applymap</code>, <code class=\"language-text\">Series.apply</code>, <code class=\"language-text\">Series.map</code> - 전체 row나 column에 적용됨.</li>\n</ul>\n<h3><code class=\"language-text\">Series.apply</code>와 <code class=\"language-text\">Series.map</code>의 차이점</h3>\n<p>둘 모두 개별 요소에 함수가 적용되지만(element-wise), 리턴할 수 있는 형태가 다르다.</p>\n<ul>\n<li><code class=\"language-text\">Series.apply</code>에 전달되는 함수는 개별 요소나 <code class=\"language-text\">Series</code>를 리턴할 수 있음</li>\n<li><code class=\"language-text\">Series.map</code>은 개별 요소만 리턴할 수 있음</li>\n</ul>\n<p>-> <code class=\"language-text\">Series.map</code>은 변환 전/후의 차원이 유지되는 반면 <code class=\"language-text\">Series.apply</code>는 변환 후의 차원이 변할 수 있음. (Series -> DataFrame이 될 수 있다)</p>","frontmatter":{"title":"Pandas map vs apply vs applymap","date":"February 22, 2022","description":null,"tags":["python","pandas","data-analysis"]}},"previous":{"fields":{"slug":"/snippets/20220216-useful-git-recipes/"},"frontmatter":{"title":"유용한 Git 레시피 몇 가지"}},"next":null},"pageContext":{"id":"4162a083-fda3-5574-a196-686f84d4b24c","previousPostId":"9acb6413-16ca-5a26-9c5a-0070e2b650c0","nextPostId":null}},
    "staticQueryHashes": ["2841359383"]}