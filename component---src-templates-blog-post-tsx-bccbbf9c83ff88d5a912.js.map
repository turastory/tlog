{"version":3,"file":"component---src-templates-blog-post-tsx-bccbbf9c83ff88d5a912.js","mappings":"uMAwDA,UA/CyBA,IAA6C,IAAAC,EAAA,IAA5C,KAAEC,EAAI,KAAEC,GAA+BH,EAC/D,MAAMI,EAAOF,EAAKG,eACZC,GAAkC,QAAtBL,EAAAC,EAAKK,KAAKC,oBAAY,IAAAP,OAAA,EAAtBA,EAAwBQ,QAAK,SACzC,SAAEC,EAAQ,KAAEC,GAAST,GAGrB,SAAEU,IAAaC,EAAAA,EAAAA,MAErB,OACEC,EAAAA,cAACC,EAAAA,EAAM,CAACN,MAAOH,EAAWH,KAAMA,EAAMa,sBAAoB,GACxDF,EAAAA,cAACG,EAAAA,EAAG,CACFR,MAAOL,EAAKc,YAAYT,MACxBU,YAAaf,EAAKc,YAAYC,aAAef,EAAKgB,UAEpDN,EAAAA,cAAA,WAASO,UAAU,OAAOC,WAAS,EAACC,SAAS,6BAC3CT,EAAAA,cAACU,EAAAA,EAAkB,CAACpB,KAAMA,IAC1BU,EAAAA,cAAA,WACEO,UAAU,YACVI,wBAAyB,CAAEC,OAAQtB,EAAKuB,MACxCC,SAAS,iBAGbd,EAAAA,cAAA,WACEA,EAAAA,cAAA,OAAKO,UAAU,yCACfP,EAAAA,cAAA,MACEO,WAAWQ,EAAAA,EAAAA,GAAK,qDAEhBf,EAAAA,cAAA,UACGJ,GACCI,EAAAA,cAACgB,EAAAA,KAAI,CAACC,GAAIrB,EAASsB,OAAOC,KAAMC,IAAI,QAAO,KACtCxB,EAASQ,YAAYT,QAI9BK,EAAAA,cAAA,UACGH,GACCG,EAAAA,cAACgB,EAAAA,KAAI,CAACC,GAAIpB,EAAKqB,OAAOC,KAAMC,IAAI,QAC7BvB,EAAKO,YAAYT,MAAM,SAM3B,C","sources":["webpack://alan-playground/./src/templates/blog-post.tsx"],"sourcesContent":["import * as React from \"react\";\nimport { Link, PageProps, graphql } from \"gatsby\";\n\nimport Layout from \"../components/layout\";\nimport Seo from \"../components/seo\";\nimport { ExtendedPostHeader } from \"../components/post-header\";\nimport { tlsx } from \"../utils/tlsx\";\nimport { useLanguage } from \"../components/language-switcher\";\n\nconst BlogPostTemplate = ({ data, path }: PageProps<BlogPostData>) => {\n  const post = data.markdownRemark;\n  const siteTitle = data.site.siteMetadata?.title || `Title`;\n  const { previous, next } = data;\n\n  // TODO: contents based on the language\n  const { language } = useLanguage();\n\n  return (\n    <Layout title={siteTitle} path={path} showLanguageSwitcher>\n      <Seo\n        title={post.frontmatter.title}\n        description={post.frontmatter.description || post.excerpt}\n      />\n      <article className=\"grow\" itemScope itemType=\"http://schema.org/Article\">\n        <ExtendedPostHeader post={post} />\n        <section\n          className=\"blog-post\"\n          dangerouslySetInnerHTML={{ __html: post.html }}\n          itemProp=\"articleBody\"\n        />\n      </article>\n      <nav>\n        <div className=\"w-full mt-16 mb-8 h-[0.5px] bg-black\" />\n        <ul\n          className={tlsx(\"flex flex-wrap justify-between list-none p-0 m-0\")}\n        >\n          <li>\n            {previous && (\n              <Link to={previous.fields.slug} rel=\"prev\">\n                ← {previous.frontmatter.title}\n              </Link>\n            )}\n          </li>\n          <li>\n            {next && (\n              <Link to={next.fields.slug} rel=\"next\">\n                {next.frontmatter.title} →\n              </Link>\n            )}\n          </li>\n        </ul>\n      </nav>\n    </Layout>\n  );\n};\n\nexport default BlogPostTemplate;\n\nexport interface BlogPostData {\n  site: {\n    siteMetadata: {\n      title: string;\n    };\n  };\n  markdownRemark: {\n    id: string;\n    fields: {\n      slug: string;\n    };\n    excerpt: string;\n    html: string;\n    frontmatter: {\n      date: string;\n      title: string;\n      description: string;\n      category: string;\n      tags: string[];\n    };\n  };\n  previous: {\n    fields: {\n      slug: string;\n    };\n    frontmatter: {\n      title: string;\n    };\n  };\n  next: {\n    fields: {\n      slug: string;\n    };\n    frontmatter: {\n      title: string;\n    };\n  };\n}\n\nexport const pageQuery = graphql`\n  query BlogPostBySlug(\n    $id: String!\n    $previousPostId: String\n    $nextPostId: String\n  ) {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n    markdownRemark(id: { eq: $id }) {\n      id\n      fields {\n        slug\n      }\n      excerpt(pruneLength: 80)\n      html\n      frontmatter {\n        date(formatString: \"YYYY-MM-DD\")\n        title\n        description\n        category\n        tags\n      }\n    }\n    previous: markdownRemark(id: { eq: $previousPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n    next: markdownRemark(id: { eq: $nextPostId }) {\n      fields {\n        slug\n      }\n      frontmatter {\n        title\n      }\n    }\n  }\n`;\n"],"names":["_ref","_data$site$siteMetada","data","path","post","markdownRemark","siteTitle","site","siteMetadata","title","previous","next","language","useLanguage","React","Layout","showLanguageSwitcher","Seo","frontmatter","description","excerpt","className","itemScope","itemType","ExtendedPostHeader","dangerouslySetInnerHTML","__html","html","itemProp","tlsx","Link","to","fields","slug","rel"],"sourceRoot":""}